import rsa
import hashlib


################################## CLIENT SIDE FOR SARKA

# Create message
JSONmessage = "Sracka JSON JSON"

# Generate hash from JSON 
m = hashlib.sha256()
m.update(JSONmessage)
hashMessage = m.digest()

# Encrypt message using AES
messageEncrypted = encryption(JSONmessage, key)

#####
#Sign message
#####
signedHashMessage = rsa_signing(privateKey, hashMessage)

# ------>>>>>>>>>> Send encrypted message and raw sign



################################# SERVER SIDE FOR ONDRA 

# <<<<<--------- Receive encrypted message and raw sign

# Decrypt message using AES, Decrypt signedHashMessage using AES
JSONmessage = decryption(messageEncrypted, key)


# Chech if received hash is same as hash generated by received message
m = hashlib.sha256()
m.update(digest)

hashReceived = hashMessage #### Received hashMessage needs to be moved to hashReceived
hashMessage = m.digest()

if(rsa_verification(privateKey, hashMessage , hashReceived)){
  #####
  # Accept incomming message
  #####
}
